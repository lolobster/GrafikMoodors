#version 330 core

in vec2 UV; // Interpolated values from the vertex shaders
uniform sampler2D myTextureSampler;       // Texture data
/*system inputs
in vec4 gl_FragCoord;
in bool gl_FrontFacing;
in vec2 gl_PointCoord;
*/
out vec3 color; // Output data


void main(){
/*
  float x=gl_FragCoord.x-0.5*wh.x;
  float y=gl_FragCoord.y-0.5*wh.y;
  float r=sqrt(x*x+y*y);

  if(r<(0.9+0.1*rand(gl_FragCoord))*200*wh.x/1024.0) {
    //Color image
    color = fragmentColor;
  } else {
    //Grayscale image
    color =  vec3(0.21*fragmentColor[0] + 0.72*fragmentColor[1] + 0.07*fragmentColor[2]);
  }

  color*=(0.9+0.1*rand(gl_FragCoord));
 //Z-value image
 //color = vec3(gl_FragCoord.z); //Plot z-values
 */
 color=texture(myTextureSampler, UV).rgb;
}